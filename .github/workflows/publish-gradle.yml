name: Reusable GitHub Packages Publisher

on:
  workflow_call:
    inputs:
      repo-name:
        required: true
        type: string
    secrets:
      USER_GITHUB_TOKEN:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.USER_GITHUB_TOKEN }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle (fallback if no wrapper)
        uses: gradle/gradle-build-action@v3

      - name: Make gradlew executable (if exists)
        run: |
          if [ -f ./gradlew ]; then
            chmod +x ./gradlew
          fi

      - name: Publish to GitHub Packages
        id: publish
        run: |
          if [ -f ./gradlew ] && [ -f ./gradle/wrapper/gradle-wrapper.jar ]; then
            ./gradlew publish
          else
            echo "Gradle wrapper not found. Falling back to system Gradle."
            gradle publish
          fi
        env:
          USER_GIT_NAME: ${{ github.actor }}
          USER_GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
          REPO_NAME: ${{ inputs.repo-name }}

      - name: Create GitHub Release
        if: success()
        run: |
          version="${{ steps.version.outputs.version }}"
          tag="$version"
          body="Automated release for version $version"

          git config user.name "agent-mcengine"
          git config user.email "agent-mcengine@users.noreply.github.com"
          git tag "$tag"
          git push origin "$tag"

          curl -s -X POST https://api.github.com/repos/${{ github.repository }}/releases \
            -H "Authorization: token ${{ secrets.USER_GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
          {
            "tag_name": "$tag",
            "name": "$tag",
            "body": "$body",
            "draft": false,
            "prerelease": false
          }
          EOF
